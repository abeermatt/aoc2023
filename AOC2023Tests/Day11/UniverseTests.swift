import XCTest

final class UniverseTests: XCTestCase {

    func testPrettyPrint() throws {
        let input = """
...#......
.......#..
#.........
..........
......#...
.#........
.........#
..........
.......#..
#...#.....
"""

        let universe = Day11.Universe.parse(input)
        
        let expected = """
...1......
.......2..
3.........
..........
......4...
.5........
.........6
..........
.......7..
8...9.....
"""

        XCTAssertEqual(expected, universe.prettyPrinted())
    }

    func testPairs() throws {
        let input = """
...#......
.......#..
#.........
..........
......#...
.#........
.........#
..........
.......#..
#...#.....
"""

        let universe = Day11.Universe.parse(input)
        XCTAssertEqual(36, universe.pairs().count)
    }
    
    func testAdjustingCoordinates() throws {
        let input = """
...#......
.......#..
#.........
..........
......#...
.#........
.........#
..........
.......#..
#...#.....
"""

        let universe = Day11.Universe.parse(input)

        XCTAssertEqual(Day11.Coordinate(x: 4, y: 0), universe.coordinate(forGalaxy: 1))
        XCTAssertEqual(Day11.Coordinate(x: 8, y: 5), universe.coordinate(forGalaxy: 4))
    }

    func testDistance() throws {
        let input = """
...#......
.......#..
#.........
..........
......#...
.#........
.........#
..........
.......#..
#...#.....
"""

        let universe = Day11.Universe.parse(input)
        
        XCTAssertEqual(9, universe.distance(betweenGalaxyAt: 5, and: 9))
        XCTAssertEqual(15, universe.distance(betweenGalaxyAt: 1, and: 7))
        XCTAssertEqual(17, universe.distance(betweenGalaxyAt: 3, and: 6))
        XCTAssertEqual(5, universe.distance(betweenGalaxyAt: 8, and: 9))

    }
    
    func testSumOfShortestPairs() throws {
        let input = """
...#......
.......#..
#.........
..........
......#...
.#........
.........#
..........
.......#..
#...#.....
"""

        let universe = Day11.Universe.parse(input)
        
        XCTAssertEqual(374, universe.sumOfShortestPaths())
    }

    func testSumOfShortestPairsWithExpansion() throws {
        let input = """
...#......
.......#..
#.........
..........
......#...
.#........
.........#
..........
.......#..
#...#.....
"""

        let universe = Day11.Universe.parse(input).expanded(by: 10)
        
        XCTAssertEqual(1030, universe.expanded(by: 10).sumOfShortestPaths())
        XCTAssertEqual(8410, universe.expanded(by: 100).sumOfShortestPaths())
    }




}
